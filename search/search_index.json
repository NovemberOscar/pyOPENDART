{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OPEN DART Python API (for Humans) \u00b6 \uc804\uc790\uacf5\uc2dc\uc2dc\uc2a4\ud15c API \ub97c \ud3b8\ub9ac\ud558\uac8c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \uc800\uc218\uc900 HTTP API\ubd80\ud130 \ub370\uc774\ud130\ud504\ub808\uc784\uc744 \ub9ac\ud134\ud558\ub294 \uace0\uc218\uc900 API \ub4f1 \uac01\uc885 \ud3b8\ub9ac\ud55c API\uc640 \uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Disclimer \ubcf8 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub294 \uae08\uc735\uac10\ub3c5\uc6d0\uc758 \uc804\uc790\uacf5\uc2dc\uc2dc\uc2a4\ud15c OPEN API \ub97c \ucd94\uac00\uc801\uc73c\ub85c \uac00\uacf5\ud558\uace0 \ubd80\uac00\uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub85c\uc368 MIT \ub77c\uc774\uc120\uc2a4\uc5d0 \ub530\ub77c \uc800\uc790 \ub610\ub294 \uc800\uc791\uad8c\uc790\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc640 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc640 \uc5f0\uad00\ub418\uc5b4 \ubc1c\uc0dd\ud558\ub294 \ubb38\uc81c\uc5d0 \ub300\ud574 \ucc45\uc784\uc744 \uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. OPEN DART API\uc5d0 \uad00\ud55c \uc815\ubcf4\ub294 opendart.fss.or.kr \ub97c \ucc38\uc870\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. Installation \u00b6 pip install pyopendart With httpx \u00b6 pip install pyopendart [ httpx ] What is DART? \u00b6 \uc804\uc790\uacf5\uc2dc\uc2dc\uc2a4\ud15c(DART ; Data Analysis, Retrieval and Transfer System)\uc740 \uc0c1\uc7a5\ubc95\uc778 \ub4f1\uc774 \uacf5\uc2dc\uc11c\ub958\ub97c \uc778\ud130\ub137\uc73c\ub85c \uc81c\ucd9c \ud558\uace0, \ud22c\uc790\uc790 \ub4f1 \uc774\uc6a9\uc790\ub294 \uc81c\ucd9c \uc989\uc2dc \uc778\ud130\ub137\uc744 \ud1b5\ud574 \uc870\ud68c\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uc885\ud569\uc801 \uae30\uc5c5\uacf5\uc2dc \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. by dart.fss.or.kr - DART\uc18c\uac1c What is OPEN DART? \u00b6 DART\uc5d0 \uacf5\uc2dc\ub418\uace0\uc788\ub294 \uacf5\uc2dc\ubcf4\uace0\uc11c \uc6d0\ubb38 \ub4f1\uc744 \uc624\ud508API\ub97c \ud1b5\ud574 \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud65c\uc6a9\uc744 \uc6d0\ud558\uc2dc\ub294 \ub204\uad6c\ub4e0\uc9c0(\uac1c\uc778, \uae30\uc5c5, \uae30\uad00 \ub4f1) \uc774\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. by opendart.fss.or.kr - \uc624\ud508API \uc18c\uac1c Features \u00b6 OPEN API \ub370\uc774\ud130\ud504\ub808\uc784, \ub515\uc154\ub108\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 dart\uc758 \ucd95\uc57d\ub41c \ud544\ub4dc\uba85\uc744 \uc790\uc138\ud55c \ud55c\uae00, \uc601\uc5b4 \ud544\ub4dc\uba85\uc73c\ub85c \ubcc0\ud658 \ub0a0\uc9dc, \uc22b\uc790\ub4f1\uc5d0 \ub300\ud574 \ub370\uc774\ud130 \ud0c0\uc785 \ubcc0\ud658 \uacf5\uc2dc\uc6d0\ubb38, \uc7ac\ubb34\uc7ac\ud45c \ub4f1 \uc6d0\ubcf8\ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc \ud074\ub77c\uc774\uc5b8\ud2b8 \ub85c\uc6b0\ub808\ubca8 OPEN API HTTP \ud074\ub77c\uc774\uc5b8\ud2b8 \ucee4\ub125\uc158 \ud480, \ud0c0\uc784\uc544\uc6c3\ub4f1 \ub124\ud2b8\uc6cc\ud06c \uc635\uc158 \uc870\uc815 \uae30\ub2a5 \uc81c\uacf5 xml, json, zip \ub9ac\uc18c\uc2a4 \uc811\uadfc \uba54\uc11c\ub4dc \uc81c\uacf5 \ud3b8\ub9ac\ud558\uace0 \ud0c0\uc785 \uc815\uc758\ub41c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\ud130\ud398\uc774\uc2a4\ub4e4 \uc694\uccad \uc778\uc790 \uc911 \uacf5\uc2dc\uc720\ud615\ub4f1\uc758 \ud544\ub4dc\uc5d0 \ub300\ud55c Enum \uc81c\uacf5 \uc608\uc678 \ud074\ub798\uc2a4 \uc81c\uacf5 \uac1c\ubc1c\uac00\uc774\ub4dc\uc5d0 \ub098\uc640\uc788\ub294 \ucd9c\ub825\uc124\uba85\ub780\uc758 \ucd9c\ub825\uacfc \uc124\uba85\uc758 \ub9e4\ud551 \uc81c\uacf5 (\ube44\uace0 \ub4f1) License \u00b6 This project is licensed under the terms of the MIT license.","title":"Home"},{"location":"#open-dart-python-api-for-humans","text":"\uc804\uc790\uacf5\uc2dc\uc2dc\uc2a4\ud15c API \ub97c \ud3b8\ub9ac\ud558\uac8c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \uc800\uc218\uc900 HTTP API\ubd80\ud130 \ub370\uc774\ud130\ud504\ub808\uc784\uc744 \ub9ac\ud134\ud558\ub294 \uace0\uc218\uc900 API \ub4f1 \uac01\uc885 \ud3b8\ub9ac\ud55c API\uc640 \uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Disclimer \ubcf8 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub294 \uae08\uc735\uac10\ub3c5\uc6d0\uc758 \uc804\uc790\uacf5\uc2dc\uc2dc\uc2a4\ud15c OPEN API \ub97c \ucd94\uac00\uc801\uc73c\ub85c \uac00\uacf5\ud558\uace0 \ubd80\uac00\uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub85c\uc368 MIT \ub77c\uc774\uc120\uc2a4\uc5d0 \ub530\ub77c \uc800\uc790 \ub610\ub294 \uc800\uc791\uad8c\uc790\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc640 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc640 \uc5f0\uad00\ub418\uc5b4 \ubc1c\uc0dd\ud558\ub294 \ubb38\uc81c\uc5d0 \ub300\ud574 \ucc45\uc784\uc744 \uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. OPEN DART API\uc5d0 \uad00\ud55c \uc815\ubcf4\ub294 opendart.fss.or.kr \ub97c \ucc38\uc870\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.","title":"OPEN DART Python API (for Humans)"},{"location":"#installation","text":"pip install pyopendart","title":"Installation"},{"location":"#with-httpx","text":"pip install pyopendart [ httpx ]","title":"With httpx"},{"location":"#what-is-dart","text":"\uc804\uc790\uacf5\uc2dc\uc2dc\uc2a4\ud15c(DART ; Data Analysis, Retrieval and Transfer System)\uc740 \uc0c1\uc7a5\ubc95\uc778 \ub4f1\uc774 \uacf5\uc2dc\uc11c\ub958\ub97c \uc778\ud130\ub137\uc73c\ub85c \uc81c\ucd9c \ud558\uace0, \ud22c\uc790\uc790 \ub4f1 \uc774\uc6a9\uc790\ub294 \uc81c\ucd9c \uc989\uc2dc \uc778\ud130\ub137\uc744 \ud1b5\ud574 \uc870\ud68c\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uc885\ud569\uc801 \uae30\uc5c5\uacf5\uc2dc \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. by dart.fss.or.kr - DART\uc18c\uac1c","title":"What is DART?"},{"location":"#what-is-open-dart","text":"DART\uc5d0 \uacf5\uc2dc\ub418\uace0\uc788\ub294 \uacf5\uc2dc\ubcf4\uace0\uc11c \uc6d0\ubb38 \ub4f1\uc744 \uc624\ud508API\ub97c \ud1b5\ud574 \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud65c\uc6a9\uc744 \uc6d0\ud558\uc2dc\ub294 \ub204\uad6c\ub4e0\uc9c0(\uac1c\uc778, \uae30\uc5c5, \uae30\uad00 \ub4f1) \uc774\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. by opendart.fss.or.kr - \uc624\ud508API \uc18c\uac1c","title":"What is OPEN DART?"},{"location":"#features","text":"OPEN API \ub370\uc774\ud130\ud504\ub808\uc784, \ub515\uc154\ub108\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 dart\uc758 \ucd95\uc57d\ub41c \ud544\ub4dc\uba85\uc744 \uc790\uc138\ud55c \ud55c\uae00, \uc601\uc5b4 \ud544\ub4dc\uba85\uc73c\ub85c \ubcc0\ud658 \ub0a0\uc9dc, \uc22b\uc790\ub4f1\uc5d0 \ub300\ud574 \ub370\uc774\ud130 \ud0c0\uc785 \ubcc0\ud658 \uacf5\uc2dc\uc6d0\ubb38, \uc7ac\ubb34\uc7ac\ud45c \ub4f1 \uc6d0\ubcf8\ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc \ud074\ub77c\uc774\uc5b8\ud2b8 \ub85c\uc6b0\ub808\ubca8 OPEN API HTTP \ud074\ub77c\uc774\uc5b8\ud2b8 \ucee4\ub125\uc158 \ud480, \ud0c0\uc784\uc544\uc6c3\ub4f1 \ub124\ud2b8\uc6cc\ud06c \uc635\uc158 \uc870\uc815 \uae30\ub2a5 \uc81c\uacf5 xml, json, zip \ub9ac\uc18c\uc2a4 \uc811\uadfc \uba54\uc11c\ub4dc \uc81c\uacf5 \ud3b8\ub9ac\ud558\uace0 \ud0c0\uc785 \uc815\uc758\ub41c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\ud130\ud398\uc774\uc2a4\ub4e4 \uc694\uccad \uc778\uc790 \uc911 \uacf5\uc2dc\uc720\ud615\ub4f1\uc758 \ud544\ub4dc\uc5d0 \ub300\ud55c Enum \uc81c\uacf5 \uc608\uc678 \ud074\ub798\uc2a4 \uc81c\uacf5 \uac1c\ubc1c\uac00\uc774\ub4dc\uc5d0 \ub098\uc640\uc788\ub294 \ucd9c\ub825\uc124\uba85\ub780\uc758 \ucd9c\ub825\uacfc \uc124\uba85\uc758 \ub9e4\ud551 \uc81c\uacf5 (\ube44\uace0 \ub4f1)","title":"Features"},{"location":"#license","text":"This project is licensed under the terms of the MIT license.","title":"License"},{"location":"corporation/","text":"Corporation \u00b6 Corporation \ud074\ub798\uc2a4\ub294 \ud574\ub2f9 \uae30\uc5c5\uc758 \uae30\uc5c5\uac1c\ud669, \uc0ac\uc5c5\ubcf4\uace0\uc11c \uc8fc\uc694\uc815\ubcf4, \uc7ac\ubb34\uc815\ubcf4, \uc9c0\ubd84\uacf5\uc2dc \uc885\ud569\uc815\ubcf4 \ub4f1\uc758 \ud3b8\ub9ac\ud55c \uc811\uadfc\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac01 \uba54\uc11c\ub4dc\uc758 \uc790\uc138\ud55c \uc0ac\uc6a9\ubc29\ubc95\uc740 \uac01 \ud074\ub77c\uc774\uc5b8\ud2b8\ubcc4 \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. \uae30\uc5c5 \uc815\ubcf4 \ud655\uc778 \u00b6 from pyopendart import Corporation corp = Corporation ( \"00126380\" , \"YOUR API KEY\" ) print ( corp . name ) print ( corp . market_info ) print ( corp . company_info ) {'ko': '\uc0bc\uc131\uc804\uc790(\uc8fc)', 'en': 'SAMSUNG ELECTRONICS CO,.LTD', 'stock': '\uc0bc\uc131\uc804\uc790'} {'name': '\uc0bc\uc131\uc804\uc790', 'code': '005930', 'market': KOSPI} {'corporation_code': '00126380', 'corporation_name': '\uc0bc\uc131\uc804\uc790(\uc8fc)', 'corporation_name_en': 'SAMSUNG ELECTRONICS CO,.LTD', 'stock_name': '\uc0bc\uc131\uc804\uc790', 'stock_code': '005930', 'representative': '\uae40\uae30\ub0a8, \uae40\ud604\uc11d, \uace0\ub3d9\uc9c4', 'market': KOSPI, 'corporation_registration_number': 1301110006246, 'taxpayer_registration_number': 1248100998, 'address': '\uacbd\uae30\ub3c4 \uc218\uc6d0\uc2dc \uc601\ud1b5\uad6c \uc0bc\uc131\ub85c 129 (\ub9e4\ud0c4\ub3d9)', 'homepage_url': 'www.sec.co.kr', 'ir_url': '', 'phone_number': '031-200-1114', 'fax_number': '031-200-7538', 'industry_code': 264, 'establishment_date': datetime.date(1969, 1, 13), 'ending_month_of_fiscal_year': 12} \uc0ac\uc5c5\ubcf4\uace0\uc11c \uc8fc\uc694\uc815\ubcf4, \uc7ac\ubb34\uc815\ubcf4, \uc9c0\ubd84\uacf5\uc2dc \uc885\ud569\uc815\ubcf4 \uc811\uadfc \u00b6 \uae30\uc5c5\ucf54\ub4dc \ud30c\ub77c\ubbf8\ud130\uac00 \uc5c6\ub294 \uac83\uc744 \uc81c\uc678\ud558\uace0\ub294 \uac01 \uc815\ubcf4\uc758 \ub370\uc774\ud130\ud504\ub808\uc784 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub3d9\uc77c\ud558\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from pyopendart import Corporation from pyopendart.enums import ReportType corp = Corporation ( \"00126380\" , \"YOUR API KEY\" ) df , meta = corp . get_financial_statements_of_major_accounts ( business_year = 2019 , report_type = ReportType . Q1 )","title":"Corporation"},{"location":"corporation/#corporation","text":"Corporation \ud074\ub798\uc2a4\ub294 \ud574\ub2f9 \uae30\uc5c5\uc758 \uae30\uc5c5\uac1c\ud669, \uc0ac\uc5c5\ubcf4\uace0\uc11c \uc8fc\uc694\uc815\ubcf4, \uc7ac\ubb34\uc815\ubcf4, \uc9c0\ubd84\uacf5\uc2dc \uc885\ud569\uc815\ubcf4 \ub4f1\uc758 \ud3b8\ub9ac\ud55c \uc811\uadfc\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac01 \uba54\uc11c\ub4dc\uc758 \uc790\uc138\ud55c \uc0ac\uc6a9\ubc29\ubc95\uc740 \uac01 \ud074\ub77c\uc774\uc5b8\ud2b8\ubcc4 \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.","title":"Corporation"},{"location":"corporation/#_1","text":"from pyopendart import Corporation corp = Corporation ( \"00126380\" , \"YOUR API KEY\" ) print ( corp . name ) print ( corp . market_info ) print ( corp . company_info ) {'ko': '\uc0bc\uc131\uc804\uc790(\uc8fc)', 'en': 'SAMSUNG ELECTRONICS CO,.LTD', 'stock': '\uc0bc\uc131\uc804\uc790'} {'name': '\uc0bc\uc131\uc804\uc790', 'code': '005930', 'market': KOSPI} {'corporation_code': '00126380', 'corporation_name': '\uc0bc\uc131\uc804\uc790(\uc8fc)', 'corporation_name_en': 'SAMSUNG ELECTRONICS CO,.LTD', 'stock_name': '\uc0bc\uc131\uc804\uc790', 'stock_code': '005930', 'representative': '\uae40\uae30\ub0a8, \uae40\ud604\uc11d, \uace0\ub3d9\uc9c4', 'market': KOSPI, 'corporation_registration_number': 1301110006246, 'taxpayer_registration_number': 1248100998, 'address': '\uacbd\uae30\ub3c4 \uc218\uc6d0\uc2dc \uc601\ud1b5\uad6c \uc0bc\uc131\ub85c 129 (\ub9e4\ud0c4\ub3d9)', 'homepage_url': 'www.sec.co.kr', 'ir_url': '', 'phone_number': '031-200-1114', 'fax_number': '031-200-7538', 'industry_code': 264, 'establishment_date': datetime.date(1969, 1, 13), 'ending_month_of_fiscal_year': 12}","title":"\uae30\uc5c5 \uc815\ubcf4 \ud655\uc778"},{"location":"corporation/#_2","text":"\uae30\uc5c5\ucf54\ub4dc \ud30c\ub77c\ubbf8\ud130\uac00 \uc5c6\ub294 \uac83\uc744 \uc81c\uc678\ud558\uace0\ub294 \uac01 \uc815\ubcf4\uc758 \ub370\uc774\ud130\ud504\ub808\uc784 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub3d9\uc77c\ud558\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. from pyopendart import Corporation from pyopendart.enums import ReportType corp = Corporation ( \"00126380\" , \"YOUR API KEY\" ) df , meta = corp . get_financial_statements_of_major_accounts ( business_year = 2019 , report_type = ReportType . Q1 )","title":"\uc0ac\uc5c5\ubcf4\uace0\uc11c \uc8fc\uc694\uc815\ubcf4, \uc7ac\ubb34\uc815\ubcf4, \uc9c0\ubd84\uacf5\uc2dc \uc885\ud569\uc815\ubcf4 \uc811\uadfc"},{"location":"exceptions/","text":"Exceptions \u00b6 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc740 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc740 \uc694\uccad \uc778\uc790\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5c8\uac70\ub098, DART \uc11c\ubc84\uc758 \uc5d0\ub7ec \ub4f1\uc5d0 \uc758\ud574 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. DART\uc5d0\uc11c \ubb38\uc11c\ud654\ub418\uc5b4 \uc788\ub294 \uc54c\ub824\uc9c4 \uc608\uc678\ub4e4\uc740 \uc544\ub798\uc758 \uc608\uc678 \ud074\ub798\uc2a4\ub4e4\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ud0c0 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc740 \uc608\uc678\ub098 \uc815\uc758\ub418\uc9c0 \uc54a\uc740 \uc624\ub958\ub97c \ubc1b\uc558\uc744 \ub54c\uc5d0\ub294 pyopendart.exceptions.UnknownError \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \uc54c\ub824\uc9c4 \uc608\uc678\ub4e4 \u00b6 Exception Class Code pyopendart.exceptions.UnregisteredKey 010 pyopendart.exceptions.UnusableKey 011 pyopendart.exceptions.Empty 013 pyopendart.exceptions.RateLimited 020 pyopendart.exceptions.InvalidParameter 100 pyopendart.exceptions.UnderMaintenance 800","title":"Exceptions"},{"location":"exceptions/#exceptions","text":"\ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc740 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc740 \uc694\uccad \uc778\uc790\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5c8\uac70\ub098, DART \uc11c\ubc84\uc758 \uc5d0\ub7ec \ub4f1\uc5d0 \uc758\ud574 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. DART\uc5d0\uc11c \ubb38\uc11c\ud654\ub418\uc5b4 \uc788\ub294 \uc54c\ub824\uc9c4 \uc608\uc678\ub4e4\uc740 \uc544\ub798\uc758 \uc608\uc678 \ud074\ub798\uc2a4\ub4e4\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ud0c0 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc740 \uc608\uc678\ub098 \uc815\uc758\ub418\uc9c0 \uc54a\uc740 \uc624\ub958\ub97c \ubc1b\uc558\uc744 \ub54c\uc5d0\ub294 pyopendart.exceptions.UnknownError \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4.","title":"Exceptions"},{"location":"exceptions/#_1","text":"Exception Class Code pyopendart.exceptions.UnregisteredKey 010 pyopendart.exceptions.UnusableKey 011 pyopendart.exceptions.Empty 013 pyopendart.exceptions.RateLimited 020 pyopendart.exceptions.InvalidParameter 100 pyopendart.exceptions.UnderMaintenance 800","title":"\uc54c\ub824\uc9c4 \uc608\uc678\ub4e4"},{"location":"utils/","text":"Utils \u00b6 \ucd9c\ub825\uc124\uba85 \ub9e4\ud551 \u00b6 DART \uc751\ub2f5 \uc911 \ucd95\uc57d\ub41c \ucf54\ub4dc\ub098 \uc57d\uc5b4\uac00 \uc0ac\uc6a9\ub418\ub294 \uc751\ub2f5\uc744 \uc704\ud574 pyopendart.descriptions \uc5d0\uc11c \ud574\ub2f9 \ucf54\ub4dc \ub610\ub294 \uc57d\uc5b4\uc640 \uc124\uba85\uc758 \ub9e4\ud551\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc758 \ub9e4\ud551\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4: FINANCIAL_STATEMENT_TYPE_DESCRIPTION - \uc0c1\uc7a5\uae30\uc5c5 \uc7ac\ubb34\uc815\ubcf4 - \uc7ac\ubb34\uc81c\ud45c \uad6c\ubd84 FINANCIAL_STATEMENT_TYPE_DETAIL_DESCRIPTION - XBRL\ud0dd\uc0ac\ub178\ubbf8\uc7ac\ubb34\uc81c\ud45c\uc591\uc2dd -\uc7ac\ubb34\uc7ac\ud45c \uad6c\ubd84 REMARK_DESCRIPTION - \uacf5\uc2dc\uac80\uc0c9 - \ube44\uace0","title":"Utils"},{"location":"utils/#utils","text":"","title":"Utils"},{"location":"utils/#_1","text":"DART \uc751\ub2f5 \uc911 \ucd95\uc57d\ub41c \ucf54\ub4dc\ub098 \uc57d\uc5b4\uac00 \uc0ac\uc6a9\ub418\ub294 \uc751\ub2f5\uc744 \uc704\ud574 pyopendart.descriptions \uc5d0\uc11c \ud574\ub2f9 \ucf54\ub4dc \ub610\ub294 \uc57d\uc5b4\uc640 \uc124\uba85\uc758 \ub9e4\ud551\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc758 \ub9e4\ud551\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4: FINANCIAL_STATEMENT_TYPE_DESCRIPTION - \uc0c1\uc7a5\uae30\uc5c5 \uc7ac\ubb34\uc815\ubcf4 - \uc7ac\ubb34\uc81c\ud45c \uad6c\ubd84 FINANCIAL_STATEMENT_TYPE_DETAIL_DESCRIPTION - XBRL\ud0dd\uc0ac\ub178\ubbf8\uc7ac\ubb34\uc81c\ud45c\uc591\uc2dd -\uc7ac\ubb34\uc7ac\ud45c \uad6c\ubd84 REMARK_DESCRIPTION - \uacf5\uc2dc\uac80\uc0c9 - \ube44\uace0","title":"\ucd9c\ub825\uc124\uba85 \ub9e4\ud551"},{"location":"api/business_report/","text":"\uc0ac\uc5c5\ubcf4\uace0\uc11c \uc8fc\uc694\uc815\ubcf4 \u00b6 Import \u00b6 Dataframe from pyopendart.api.dataframe import BusinessReportApi from pyopendart.enums import ReportType Dict from pyopendart.api.dict import BusinessReportApi from pyopendart.enums import ReportType Parameter \u00b6 Name Type DART Name corporation_code str corp_code business_year int bsns_year report_type ReportType reprt_code \uc99d\u318d\uac10\uc790 \ud604\ud669 (\uc790\ubcf8\uae08 \ubcc0\ub3d9\uc0ac\ud56d) \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_changes_in_equity ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) changes_in_equity = api . get_changes_in_equity ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \ubc30\ub2f9\uc5d0 \uad00\ud55c \uc0ac\ud56d \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_dividend_info ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) dividend_info = api . get_dividend_info ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \uc790\uae30\uc8fc\uc2dd \ucde8\ub4dd \ubc0f \ucc98\ubd84 \ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_treasury_shares_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) treasury_shares_status = api . get_treasury_shares_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \ucd5c\ub300\uc8fc\uc8fc \ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_major_shareholders ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) major_shareholders = api . get_major_shareholders ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \ucd5c\ub300\uc8fc\uc8fc \ubcc0\ub3d9 \ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_changes_in_major_shareholder ( corporation_code = \"00356361\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) changes_in_major_shareholder = api . get_changes_in_major_shareholder ( corporation_code = \"00356361\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \uc18c\uc561\uc8fc\uc8fc \ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_minority_shareholders_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) minority_shareholders_status = api . get_minority_shareholders_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \uc784\uc6d0 \ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_executives ( corporation_code = \"00126380\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) executives = api . get_executives ( corporation_code = \"00126380\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \uc9c1\uc6d0 \ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_employment_status ( corporation_code = \"00126380\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) employment_status = api . get_employment_status ( corporation_code = \"00126380\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \uc774\uc0ac\u318d\uac10\uc0ac\uc758 \uac1c\uc778\ubcc4 \ubcf4\uc218 \ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_individual_executive_compensation_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) individual_executive_compensation_status = api . get_individual_executive_compensation_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \uc774\uc0ac\u318d\uac10\uc0ac \uc804\uccb4\uc758 \ubcf4\uc218\ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_executive_compensation_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) executive_compensation_status = api . get_executive_compensation_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) \uac1c\uc778\ubcc4 \ubcf4\uc218\uc9c0\uae09 \uae08\uc561(5\uc5b5\uc774\uc0c1 \uc0c1\uc7045\uc778) \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_top_5_individual_executive_compensation ( corporation_code = \"00126380\" , business_year = 2019 , report_type = ReportType . Q1 ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) top_5_individual_executive_compensation = api . get_top_5_individual_executive_compensation ( corporation_code = \"00126380\" , business_year = 2019 , report_type = ReportType . Q1 ) \ud0c0\ubc95\uc778 \ucd9c\uc790\ud604\ud669 \u00b6 Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_investment_in_other_corporations ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) investment_in_other_corporations = api . get_investment_in_other_corporations ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\uc0ac\uc5c5\ubcf4\uace0\uc11c \uc8fc\uc694\uc815\ubcf4"},{"location":"api/business_report/#_1","text":"","title":"\uc0ac\uc5c5\ubcf4\uace0\uc11c \uc8fc\uc694\uc815\ubcf4"},{"location":"api/business_report/#import","text":"Dataframe from pyopendart.api.dataframe import BusinessReportApi from pyopendart.enums import ReportType Dict from pyopendart.api.dict import BusinessReportApi from pyopendart.enums import ReportType","title":"Import"},{"location":"api/business_report/#parameter","text":"Name Type DART Name corporation_code str corp_code business_year int bsns_year report_type ReportType reprt_code","title":"Parameter"},{"location":"api/business_report/#_2","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_changes_in_equity ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) changes_in_equity = api . get_changes_in_equity ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\uc99d\u318d\uac10\uc790 \ud604\ud669 (\uc790\ubcf8\uae08 \ubcc0\ub3d9\uc0ac\ud56d)"},{"location":"api/business_report/#_3","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_dividend_info ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) dividend_info = api . get_dividend_info ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\ubc30\ub2f9\uc5d0 \uad00\ud55c \uc0ac\ud56d"},{"location":"api/business_report/#_4","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_treasury_shares_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) treasury_shares_status = api . get_treasury_shares_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\uc790\uae30\uc8fc\uc2dd \ucde8\ub4dd \ubc0f \ucc98\ubd84 \ud604\ud669"},{"location":"api/business_report/#_5","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_major_shareholders ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) major_shareholders = api . get_major_shareholders ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\ucd5c\ub300\uc8fc\uc8fc \ud604\ud669"},{"location":"api/business_report/#_6","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_changes_in_major_shareholder ( corporation_code = \"00356361\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) changes_in_major_shareholder = api . get_changes_in_major_shareholder ( corporation_code = \"00356361\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\ucd5c\ub300\uc8fc\uc8fc \ubcc0\ub3d9 \ud604\ud669"},{"location":"api/business_report/#_7","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_minority_shareholders_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) minority_shareholders_status = api . get_minority_shareholders_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\uc18c\uc561\uc8fc\uc8fc \ud604\ud669"},{"location":"api/business_report/#_8","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_executives ( corporation_code = \"00126380\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) executives = api . get_executives ( corporation_code = \"00126380\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\uc784\uc6d0 \ud604\ud669"},{"location":"api/business_report/#_9","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_employment_status ( corporation_code = \"00126380\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) employment_status = api . get_employment_status ( corporation_code = \"00126380\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\uc9c1\uc6d0 \ud604\ud669"},{"location":"api/business_report/#_10","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_individual_executive_compensation_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) individual_executive_compensation_status = api . get_individual_executive_compensation_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\uc774\uc0ac\u318d\uac10\uc0ac\uc758 \uac1c\uc778\ubcc4 \ubcf4\uc218 \ud604\ud669"},{"location":"api/business_report/#_11","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_executive_compensation_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) executive_compensation_status = api . get_executive_compensation_status ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\uc774\uc0ac\u318d\uac10\uc0ac \uc804\uccb4\uc758 \ubcf4\uc218\ud604\ud669"},{"location":"api/business_report/#5-5","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_top_5_individual_executive_compensation ( corporation_code = \"00126380\" , business_year = 2019 , report_type = ReportType . Q1 ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) top_5_individual_executive_compensation = api . get_top_5_individual_executive_compensation ( corporation_code = \"00126380\" , business_year = 2019 , report_type = ReportType . Q1 )","title":"\uac1c\uc778\ubcc4 \ubcf4\uc218\uc9c0\uae09 \uae08\uc561(5\uc5b5\uc774\uc0c1 \uc0c1\uc7045\uc778)"},{"location":"api/business_report/#_12","text":"Dataframe api = BusinessReportApi ( \"YOUR API KEY\" ) df = api . get_investment_in_other_corporations ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL ) Dict api = BusinessReportApi ( \"YOUR API KEY\" ) investment_in_other_corporations = api . get_investment_in_other_corporations ( corporation_code = \"00293886\" , business_year = 2018 , report_type = ReportType . ANNUAL )","title":"\ud0c0\ubc95\uc778 \ucd9c\uc790\ud604\ud669"},{"location":"api/configuration/","text":"API \uc124\uc815 \u00b6 \ub124\ud2b8\uc6cc\ud06c \uc635\uc158 \uc124\uc815\ud558\uae30 \u00b6 \ub124\ud2b8\uc6cc\ud06c \uc0c1\ud669\uc5d0 \ub9de\ucd94\uc5b4 \uac01 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud0c0\uc784\uc544\uc6c3\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Available Options \u00b6 Name Type default_timeout Requests type or Httpx type default_download_timeout Requests type or Httpx type use_connection_pool bool from pyopendart.api.dataframe import FillingApi from pyopendart.api.http.requests import RequestsOpenApiClient client = RequestsOpenApiClient ( \"YOUR API KEY\" , default_timeout = 15 ) api = FillingApi ( client = client ) df = api . get_company_overview ( \"00126380\" ) Note \uae30\ubcf8\uc801\uc73c\ub85c\ub294 requests \ud615\uc2dd\uc758 \ud0c0\uc784\uc544\uc6c3\uc744 \uc0ac\uc6a9\ud558\uc9c0\ub9cc HTTPX \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 HTTPX \ud615\uc2dd\uc758 \ud0c0\uc784\uc544\uc6c3\ub3c4 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uba85 \ubcc0\ud658 \uc635\uc158 \uc124\uc815\ud558\uae30 \u00b6 \uac01 api \ub4e4\uc740 dart\uc758 \ucd95\uc57d\ub41c \ud544\ub4dc\uba85\uc744 \uc790\uc138\ud55c \ud55c\uae00, \uc601\uc5b4 \ud544\ub4dc\uba85\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \uc635\uc158\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc870\uc791\ud558\uc5ec \uae30\ubcf8\uc73c\ub85c \uc601\uc5b4 \ud544\ub4dc\uba85\uc73c\ub85c \ubcc0\ud658\ub418\ub294 \uac83\uc744 \ud55c\uae00\ub85c \ubcc0\ud658\ub418\uac8c \ud558\uac70\ub098 \ub610\ub294 \ud544\ub4dc\uba85 \uc218\uc815\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def some_api ( ... * , rename : Optional [ RenameMode ] = RenameMode . ENG ) HTTPX \ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc6a9\ud558\uae30 \u00b6 Be careful of use HTTPX is currently in beta. for further information, please visit HTTPX Install httpx \u00b6 To use httpx client, extra requirements should be installed pip install pyopendart [ httpx ] Using httpx client \u00b6 You can use httpx client instead of requests client by passing parameter to client constructor. from pyopendart.api.http.httpx import HttpxOpenApiClient httpx_client = HttpxOpenApiClient ( \"YOUR API KEY\" , default_timeout = 7 , default_download_timeout = 17 , use_connection_pool = True ) client = DataframeDisclosureClient ( client = httpx_client ) \ub2e4\ub978 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc6a9\ud558\uae30 \u00b6 \uae30\ubcf8\uc73c\ub85c \uc81c\uacf5\ub418\ub294 Requests, HTTPX \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 OpenApiClient \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uccb4\uc785\ub2c8\ub2e4. \ud574\ub2f9 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec \uc790\uc2e0\ub9cc\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 from pyopendart.api.dataframe import FillingApi from pyopendart.api.http import DartApiParamType , OpenApiClient class MyOwnOpenApiClient ( OpenApiClient ): ... api = FillingApi ( client = MyOwnClient ( \"YOUR API KEY\" ))","title":"\ud074\ub77c\uc774\uc5b8\ud2b8 \uc124\uc815\ud558\uae30"},{"location":"api/configuration/#api","text":"","title":"API \uc124\uc815"},{"location":"api/configuration/#_1","text":"\ub124\ud2b8\uc6cc\ud06c \uc0c1\ud669\uc5d0 \ub9de\ucd94\uc5b4 \uac01 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud0c0\uc784\uc544\uc6c3\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \uc635\uc158 \uc124\uc815\ud558\uae30"},{"location":"api/configuration/#available-options","text":"Name Type default_timeout Requests type or Httpx type default_download_timeout Requests type or Httpx type use_connection_pool bool from pyopendart.api.dataframe import FillingApi from pyopendart.api.http.requests import RequestsOpenApiClient client = RequestsOpenApiClient ( \"YOUR API KEY\" , default_timeout = 15 ) api = FillingApi ( client = client ) df = api . get_company_overview ( \"00126380\" ) Note \uae30\ubcf8\uc801\uc73c\ub85c\ub294 requests \ud615\uc2dd\uc758 \ud0c0\uc784\uc544\uc6c3\uc744 \uc0ac\uc6a9\ud558\uc9c0\ub9cc HTTPX \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 HTTPX \ud615\uc2dd\uc758 \ud0c0\uc784\uc544\uc6c3\ub3c4 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Available Options"},{"location":"api/configuration/#_2","text":"\uac01 api \ub4e4\uc740 dart\uc758 \ucd95\uc57d\ub41c \ud544\ub4dc\uba85\uc744 \uc790\uc138\ud55c \ud55c\uae00, \uc601\uc5b4 \ud544\ub4dc\uba85\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \uc635\uc158\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc870\uc791\ud558\uc5ec \uae30\ubcf8\uc73c\ub85c \uc601\uc5b4 \ud544\ub4dc\uba85\uc73c\ub85c \ubcc0\ud658\ub418\ub294 \uac83\uc744 \ud55c\uae00\ub85c \ubcc0\ud658\ub418\uac8c \ud558\uac70\ub098 \ub610\ub294 \ud544\ub4dc\uba85 \uc218\uc815\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. def some_api ( ... * , rename : Optional [ RenameMode ] = RenameMode . ENG )","title":"\ud544\ub4dc\uba85 \ubcc0\ud658 \uc635\uc158 \uc124\uc815\ud558\uae30"},{"location":"api/configuration/#httpx","text":"Be careful of use HTTPX is currently in beta. for further information, please visit HTTPX","title":"HTTPX \ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc6a9\ud558\uae30"},{"location":"api/configuration/#install-httpx","text":"To use httpx client, extra requirements should be installed pip install pyopendart [ httpx ]","title":"Install httpx"},{"location":"api/configuration/#using-httpx-client","text":"You can use httpx client instead of requests client by passing parameter to client constructor. from pyopendart.api.http.httpx import HttpxOpenApiClient httpx_client = HttpxOpenApiClient ( \"YOUR API KEY\" , default_timeout = 7 , default_download_timeout = 17 , use_connection_pool = True ) client = DataframeDisclosureClient ( client = httpx_client )","title":"Using httpx client"},{"location":"api/configuration/#_3","text":"\uae30\ubcf8\uc73c\ub85c \uc81c\uacf5\ub418\ub294 Requests, HTTPX \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 OpenApiClient \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uccb4\uc785\ub2c8\ub2e4. \ud574\ub2f9 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec \uc790\uc2e0\ub9cc\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 from pyopendart.api.dataframe import FillingApi from pyopendart.api.http import DartApiParamType , OpenApiClient class MyOwnOpenApiClient ( OpenApiClient ): ... api = FillingApi ( client = MyOwnClient ( \"YOUR API KEY\" ))","title":"\ub2e4\ub978 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc6a9\ud558\uae30"},{"location":"api/filling/","text":"\uacf5\uc2dc\uc815\ubcf4 \u00b6 Import \u00b6 Dataframe from pyopendart.api.dataframe import FillingApi from pyopendart.enums import DisclosureType , DisclosureTypeDetail , Market , SortBy Dict from pyopendart.api.dict import FillingApi from pyopendart.enums import DisclosureType , DisclosureTypeDetail , Market , SortBy \uacf5\uc2dc\uac80\uc0c9 \u00b6 Parameter \u00b6 Name Type DART Name corporation_code Optional[str] corp_code date_begin Optional[date] bgn_de date_end Optional[date] end_de only_last_report Optional[bool] last_reprt_at type Optional[Union[DisclosureType, str]] pblntf_ty type_detail Optional[Union[DisclosureTypeDetail, str]] pblntf_detail_ty market Optional[Market] corp_cls sort Optional[Sort] sort, sort_mth sort_by Optional[SortBy] sort ascending bool (default False) sort_mth page int (default 1) page_no limit int (default 20) page_count Usage \u00b6 Dataframe client = FillingApi ( \"YOUR API KEY\" ) df , pagination = client . search ( date_begin = date ( year = 2021 , month = 1 , day = 1 ), date_end = datetime . now () . date (), market = Market . KOSPI , ) Dict client = FillingApi ( \"YOUR API KEY\" ) search_results , pagination = client . search ( date_begin = date ( year = 2021 , month = 1 , day = 1 ), date_end = datetime . now () . date (), market = Market . KOSPI , ) \uae30\uc5c5\uac1c\ud669 \u00b6 Parameter \u00b6 Name Type DART Name corporation_code str corp_code Usage \u00b6 Dataframe client = FillingApi ( \"YOUR API KEY\" ) df = client . get_company_overview ( \"00126380\" ) Dict client = FillingApi ( \"YOUR API KEY\" ) company_overview = client . get_company_overview ( \"00126380\" ) \uacf5\uc2dc\uc11c\ub958\uc6d0\ubcf8\ud30c\uc77c(XML) \ub2e4\uc6b4\ub85c\ub4dc \u00b6 ZIP \ud615\ud0dc\uc758 \uacf5\uc2dc\uc11c\ub958 \uc6d0\ubcf8\ud30c\uc77c \uc751\ub2f5\uc744 \uc790\ub3d9\uc73c\ub85c \uc555\ucd95 \ud574\uc81c\ud574 \uc9c0\uc815\ud55c \uacbd\ub85c\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. Parameter \u00b6 Name Type DART Name receipt_no str rcept_no Usage \u00b6 client = FillingApi ( \"YOUR API KEY\" ) client . get_filling_file ( \"20190401004781\" , \"./temp\" ) \uacf5\uc2dc\ub300\uc0c1\ud68c\uc0ac \uace0\uc720\ubc88\ud638 \ubaa9\ub85d \ub2e4\uc6b4\ub85c\ub4dc \u00b6 ZIP \ud615\ud0dc\uc758 \uacf5\uc2dc\ub300\uc0c1\ud68c\uc0ac \uace0\uc720\ubc88\ud638 \ubaa9\ub85d \uc751\ub2f5\uc744 \uc790\ub3d9\uc73c\ub85c \uc555\ucd95 \ud574\uc81c\ud574 \uc9c0\uc815\ud55c \uacbd\ub85c\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. Parameter \u00b6 No parameter required. Usage \u00b6 client = FillingApi ( \"YOUR API KEY\" ) client . get_corporation_codes ( \"./temp\" )","title":"\uacf5\uc2dc\uc815\ubcf4"},{"location":"api/filling/#_1","text":"","title":"\uacf5\uc2dc\uc815\ubcf4"},{"location":"api/filling/#import","text":"Dataframe from pyopendart.api.dataframe import FillingApi from pyopendart.enums import DisclosureType , DisclosureTypeDetail , Market , SortBy Dict from pyopendart.api.dict import FillingApi from pyopendart.enums import DisclosureType , DisclosureTypeDetail , Market , SortBy","title":"Import"},{"location":"api/filling/#_2","text":"","title":"\uacf5\uc2dc\uac80\uc0c9"},{"location":"api/filling/#parameter","text":"Name Type DART Name corporation_code Optional[str] corp_code date_begin Optional[date] bgn_de date_end Optional[date] end_de only_last_report Optional[bool] last_reprt_at type Optional[Union[DisclosureType, str]] pblntf_ty type_detail Optional[Union[DisclosureTypeDetail, str]] pblntf_detail_ty market Optional[Market] corp_cls sort Optional[Sort] sort, sort_mth sort_by Optional[SortBy] sort ascending bool (default False) sort_mth page int (default 1) page_no limit int (default 20) page_count","title":"Parameter"},{"location":"api/filling/#usage","text":"Dataframe client = FillingApi ( \"YOUR API KEY\" ) df , pagination = client . search ( date_begin = date ( year = 2021 , month = 1 , day = 1 ), date_end = datetime . now () . date (), market = Market . KOSPI , ) Dict client = FillingApi ( \"YOUR API KEY\" ) search_results , pagination = client . search ( date_begin = date ( year = 2021 , month = 1 , day = 1 ), date_end = datetime . now () . date (), market = Market . KOSPI , )","title":"Usage"},{"location":"api/filling/#_3","text":"","title":"\uae30\uc5c5\uac1c\ud669"},{"location":"api/filling/#parameter_1","text":"Name Type DART Name corporation_code str corp_code","title":"Parameter"},{"location":"api/filling/#usage_1","text":"Dataframe client = FillingApi ( \"YOUR API KEY\" ) df = client . get_company_overview ( \"00126380\" ) Dict client = FillingApi ( \"YOUR API KEY\" ) company_overview = client . get_company_overview ( \"00126380\" )","title":"Usage"},{"location":"api/filling/#xml","text":"ZIP \ud615\ud0dc\uc758 \uacf5\uc2dc\uc11c\ub958 \uc6d0\ubcf8\ud30c\uc77c \uc751\ub2f5\uc744 \uc790\ub3d9\uc73c\ub85c \uc555\ucd95 \ud574\uc81c\ud574 \uc9c0\uc815\ud55c \uacbd\ub85c\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4.","title":"\uacf5\uc2dc\uc11c\ub958\uc6d0\ubcf8\ud30c\uc77c(XML) \ub2e4\uc6b4\ub85c\ub4dc"},{"location":"api/filling/#parameter_2","text":"Name Type DART Name receipt_no str rcept_no","title":"Parameter"},{"location":"api/filling/#usage_2","text":"client = FillingApi ( \"YOUR API KEY\" ) client . get_filling_file ( \"20190401004781\" , \"./temp\" )","title":"Usage"},{"location":"api/filling/#_4","text":"ZIP \ud615\ud0dc\uc758 \uacf5\uc2dc\ub300\uc0c1\ud68c\uc0ac \uace0\uc720\ubc88\ud638 \ubaa9\ub85d \uc751\ub2f5\uc744 \uc790\ub3d9\uc73c\ub85c \uc555\ucd95 \ud574\uc81c\ud574 \uc9c0\uc815\ud55c \uacbd\ub85c\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4.","title":"\uacf5\uc2dc\ub300\uc0c1\ud68c\uc0ac \uace0\uc720\ubc88\ud638 \ubaa9\ub85d \ub2e4\uc6b4\ub85c\ub4dc"},{"location":"api/filling/#parameter_3","text":"No parameter required.","title":"Parameter"},{"location":"api/filling/#usage_3","text":"client = FillingApi ( \"YOUR API KEY\" ) client . get_corporation_codes ( \"./temp\" )","title":"Usage"},{"location":"api/financial_statement/","text":"\uc0c1\uc7a5\uae30\uc5c5 \uc7ac\ubb34\uc815\ubcf4 \u00b6 Import \u00b6 Dataframe from pyopendart.api.dataframe import FinancialStatementApi from pyopendart.enums import ReportType , FinancialStatementDivision , FinancialStatementTypeDetail Dict from pyopendart.api.dict import FinancialStatementApi from pyopendart.enums import ReportType , FinancialStatementDivision , FinancialStatementTypeDetail \ub2e8\uc77c\u318d\ub2e4\uc911\ud68c\uc0ac \uc8fc\uc694\uacc4\uc815 \u00b6 Parameter \u00b6 Name Type DART Name corporation_codes List[str] corp_code business_year int bsns_year report_type ReportType reprt_code Usage \u00b6 Dataframe api = FinancialStatementApi ( \"YOUR API KEY\" ) df = api . get_financial_statements_of_major_accounts ( corporation_codes = [ \"00293886\" , \"00126380\" ], business_year = 2019 , report_type = ReportType . Q1 ) Dict api = FinancialStatementApi ( \"YOUR API KEY\" ) financial_statements_of_major_accounts = api . get_financial_statements_of_major_accounts ( corporation_codes = [ \"00293886\" , \"00126380\" ], business_year = 2019 , report_type = ReportType . Q1 ) \ub2e8\uc77c\ud68c\uc0ac \uc804\uccb4 \uc7ac\ubb34\uc81c\ud45c \u00b6 Parameter \u00b6 Name Type DART Name corporation_codes List[str] corp_code business_year int bsns_year report_type ReportType reprt_code financial_statement_division Union[FinancialStatementDivision, str] fs_div Usage \u00b6 Dataframe api = FinancialStatementApi ( \"YOUR API KEY\" ) df = api . get_full_financial_statements ( corporation_code = \"00293886\" , business_year = 2019 , report_type = ReportType . Q1 ) Dict api = FinancialStatementApi ( \"YOUR API KEY\" ) full_financial_statements = api . get_full_financial_statements ( corporation_code = \"00293886\" , business_year = 2019 , report_type = ReportType . Q1 ) XBRL\ud0dd\uc18c\ub178\ubbf8 \uc7ac\ubb34\uc81c\ud45c\uc591\uc2dd \u00b6 Parameter \u00b6 Name Type DART Name detailed_financial_statement_type Union[FinancialStatementTypeDetail, str] sj_div Usage \u00b6 Dataframe api = FinancialStatementApi ( \"YOUR API KEY\" ) df = api . get_xbrl_taxonomies ( FinancialStatementTypeDetail . BS1 ) # or \"BS1\" in string Dict api = FinancialStatementApi ( \"YOUR API KEY\" ) xbrl_taxonomies = api . get_xbrl_taxonomies ( FinancialStatementTypeDetail . BS1 ) \uc7ac\ubb34\uc81c\ud45c \uc6d0\ubcf8\ud30c\uc77c(XBRL) \ub2e4\uc6b4\ub85c\ub4dc \u00b6 \uc7ac\ubb34\uc81c\ud45c \uc6d0\ubcf8\ud30c\uc77c (XBRL) \uc751\ub2f5\uc744 \uc790\ub3d9\uc73c\ub85c \uc555\ucd95 \ud574\uc81c\uc5d0 \uc9c0\uc815\ud55c \uacbd\ub85c\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. Parameter \u00b6 Name Type DART Name corporation_code str corp_code report_type ReportType reprt_code Usage \u00b6 api = FinancialStatementApi ( \"YOUR API KEY\" ) api . get_xbrl_document ( \"20190401004781\" , ReportType . ANNUAL , \"./temp\" )","title":"\uc0c1\uc7a5\uae30\uc5c5 \uc7ac\ubb34\uc815\ubcf4"},{"location":"api/financial_statement/#_1","text":"","title":"\uc0c1\uc7a5\uae30\uc5c5 \uc7ac\ubb34\uc815\ubcf4"},{"location":"api/financial_statement/#import","text":"Dataframe from pyopendart.api.dataframe import FinancialStatementApi from pyopendart.enums import ReportType , FinancialStatementDivision , FinancialStatementTypeDetail Dict from pyopendart.api.dict import FinancialStatementApi from pyopendart.enums import ReportType , FinancialStatementDivision , FinancialStatementTypeDetail","title":"Import"},{"location":"api/financial_statement/#_2","text":"","title":"\ub2e8\uc77c\u318d\ub2e4\uc911\ud68c\uc0ac \uc8fc\uc694\uacc4\uc815"},{"location":"api/financial_statement/#parameter","text":"Name Type DART Name corporation_codes List[str] corp_code business_year int bsns_year report_type ReportType reprt_code","title":"Parameter"},{"location":"api/financial_statement/#usage","text":"Dataframe api = FinancialStatementApi ( \"YOUR API KEY\" ) df = api . get_financial_statements_of_major_accounts ( corporation_codes = [ \"00293886\" , \"00126380\" ], business_year = 2019 , report_type = ReportType . Q1 ) Dict api = FinancialStatementApi ( \"YOUR API KEY\" ) financial_statements_of_major_accounts = api . get_financial_statements_of_major_accounts ( corporation_codes = [ \"00293886\" , \"00126380\" ], business_year = 2019 , report_type = ReportType . Q1 )","title":"Usage"},{"location":"api/financial_statement/#_3","text":"","title":"\ub2e8\uc77c\ud68c\uc0ac \uc804\uccb4 \uc7ac\ubb34\uc81c\ud45c"},{"location":"api/financial_statement/#parameter_1","text":"Name Type DART Name corporation_codes List[str] corp_code business_year int bsns_year report_type ReportType reprt_code financial_statement_division Union[FinancialStatementDivision, str] fs_div","title":"Parameter"},{"location":"api/financial_statement/#usage_1","text":"Dataframe api = FinancialStatementApi ( \"YOUR API KEY\" ) df = api . get_full_financial_statements ( corporation_code = \"00293886\" , business_year = 2019 , report_type = ReportType . Q1 ) Dict api = FinancialStatementApi ( \"YOUR API KEY\" ) full_financial_statements = api . get_full_financial_statements ( corporation_code = \"00293886\" , business_year = 2019 , report_type = ReportType . Q1 )","title":"Usage"},{"location":"api/financial_statement/#xbrl","text":"","title":"XBRL\ud0dd\uc18c\ub178\ubbf8 \uc7ac\ubb34\uc81c\ud45c\uc591\uc2dd"},{"location":"api/financial_statement/#parameter_2","text":"Name Type DART Name detailed_financial_statement_type Union[FinancialStatementTypeDetail, str] sj_div","title":"Parameter"},{"location":"api/financial_statement/#usage_2","text":"Dataframe api = FinancialStatementApi ( \"YOUR API KEY\" ) df = api . get_xbrl_taxonomies ( FinancialStatementTypeDetail . BS1 ) # or \"BS1\" in string Dict api = FinancialStatementApi ( \"YOUR API KEY\" ) xbrl_taxonomies = api . get_xbrl_taxonomies ( FinancialStatementTypeDetail . BS1 )","title":"Usage"},{"location":"api/financial_statement/#xbrl_1","text":"\uc7ac\ubb34\uc81c\ud45c \uc6d0\ubcf8\ud30c\uc77c (XBRL) \uc751\ub2f5\uc744 \uc790\ub3d9\uc73c\ub85c \uc555\ucd95 \ud574\uc81c\uc5d0 \uc9c0\uc815\ud55c \uacbd\ub85c\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4.","title":"\uc7ac\ubb34\uc81c\ud45c \uc6d0\ubcf8\ud30c\uc77c(XBRL) \ub2e4\uc6b4\ub85c\ub4dc"},{"location":"api/financial_statement/#parameter_3","text":"Name Type DART Name corporation_code str corp_code report_type ReportType reprt_code","title":"Parameter"},{"location":"api/financial_statement/#usage_3","text":"api = FinancialStatementApi ( \"YOUR API KEY\" ) api . get_xbrl_document ( \"20190401004781\" , ReportType . ANNUAL , \"./temp\" )","title":"Usage"},{"location":"api/shareholders_report/","text":"\uc9c0\ubd84\uacf5\uc2dc \uc885\ud569\uc815\ubcf4 \u00b6 Import \u00b6 Dataframe from pyopendart.api.dataframe import ShareholdersReportApi Dict from pyopendart.api.dataframe import ShareholdersReportApi Parameter \u00b6 Name Type DART Name corporation_code str corp_code \ub300\ub7c9\ubcf4\uc720 \uc0c1\ud669\ubcf4\uace0 \u00b6 Dataframe api = ShareholdersReportApi ( \"YOUR API KEY\" ) df = api . get_major_shareholder_reports ( corporation_code = \"00126380\" ) Dict api = ShareholdersReportApi ( \"YOUR API KEY\" ) major_shareholder_report = api . get_major_shareholder_reports ( corporation_code = \"00126380\" ) \uc784\uc6d0\u318d\uc8fc\uc694\uc8fc\uc8fc \uc18c\uc720\ubcf4\uace0 \u00b6 Dataframe api = ShareholdersReportApi ( \"YOUR API KEY\" ) df = api . get_executive_shareholder_reports ( corporation_code = \"00126380\" ) Dict api = ShareholdersReportApi ( \"YOUR API KEY\" ) executive_shareholder_reports = api . get_executive_shareholder_reports ( corporation_code = \"00126380\" )","title":"\uc9c0\ubd84\uacf5\uc2dc \uc885\ud569\uc815\ubcf4"},{"location":"api/shareholders_report/#_1","text":"","title":"\uc9c0\ubd84\uacf5\uc2dc \uc885\ud569\uc815\ubcf4"},{"location":"api/shareholders_report/#import","text":"Dataframe from pyopendart.api.dataframe import ShareholdersReportApi Dict from pyopendart.api.dataframe import ShareholdersReportApi","title":"Import"},{"location":"api/shareholders_report/#parameter","text":"Name Type DART Name corporation_code str corp_code","title":"Parameter"},{"location":"api/shareholders_report/#_2","text":"Dataframe api = ShareholdersReportApi ( \"YOUR API KEY\" ) df = api . get_major_shareholder_reports ( corporation_code = \"00126380\" ) Dict api = ShareholdersReportApi ( \"YOUR API KEY\" ) major_shareholder_report = api . get_major_shareholder_reports ( corporation_code = \"00126380\" )","title":"\ub300\ub7c9\ubcf4\uc720 \uc0c1\ud669\ubcf4\uace0"},{"location":"api/shareholders_report/#_3","text":"Dataframe api = ShareholdersReportApi ( \"YOUR API KEY\" ) df = api . get_executive_shareholder_reports ( corporation_code = \"00126380\" ) Dict api = ShareholdersReportApi ( \"YOUR API KEY\" ) executive_shareholder_reports = api . get_executive_shareholder_reports ( corporation_code = \"00126380\" )","title":"\uc784\uc6d0\u318d\uc8fc\uc694\uc8fc\uc8fc \uc18c\uc720\ubcf4\uace0"}]}